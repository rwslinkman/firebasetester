buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.3.2"
        classpath 'com.bmuschko:gradle-izpack-plugin:2.1'
    }
}
plugins {
    id "org.asciidoctor.convert" version "1.5.2"
    id 'net.saliman.cobertura' version '2.3.2'
}

group 'nl.rwslinkman'
version '1.0'

apply plugin: 'java'

// Where dependencies come from
repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {
    // Used in application
    compile 'com.intellij:forms_rt:6.0.5'
    compile 'org.slf4j:slf4j-simple:1.7.12'

    // Used in test
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

// Asciidoc plugin
ext {
    snippetsDir = file('build/asciidoc-snippets')
}
ext['spring-restdocs.version'] = '1.1.0.RELEASE'
test {
    outputs.dir snippetsDir
}
asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    outputDir 'build/asciidoc'
    dependsOn test
    sourceDir 'src/main/asciidoc'
}

// Export to runnable JAR
jar {
    baseName = 'FirebaseTester'
    version "${version}"
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/") {
        into 'static/docs'
    }
    destinationDir file("$rootDir/build/output")
    manifest {
        attributes 'Main-Class': 'nl.rwslinkman.firebasetester.FirebaseTester'
        attributes 'Class-Path': configurations.runtime.files.collect { "$it.name" }.join(' ')
    }
    from {
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Code coverage
cobertura {
    coverageFormats  = ['xml', 'html']
}
